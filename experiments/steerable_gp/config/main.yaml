# @package _global_

defaults:
  # GENERAL #
  - _self_

  - server: base
  - logger: csv

  - net: mattn
  - lr_schedule: rcosine
  # - lr_schedule: constant
  - beta_schedule: linear
  - kernel: whitevec
  - data: gp
  - data_kernel: divfree
  # - data_kernel: curlfree
  
  # enable color logging
  - override hydra/hydra_logging: default
  - override hydra/job_logging: default


# net:
#   n_layers: 5
#   hidden_dim: 64

name: steerable_gp
mode: train
seed: 0

beta_schedule:
  # t0: 3e-4
  t0: 5e-4
  t1: 1.0
  beta0: 1e-4
  beta1: 15.0

optim:
  batch_size: 40
  num_steps: 80_000
  lr: 5e-4
  learning_rate: ${eval:${optim.lr}*${eval:${optim.batch_size}/40}}
  ema_rate: 0.999

eval:
  batch_size: ${eval:${optim.batch_size}//4}
  prior:
    n_steps: 100
    rtol: 1e-4
    atol: 1e-4
    prob_flow: false
  cond:
    lambda0: 1.
    psi: 1.
    tau: 0.5
    n_steps: 50
    n_inner_steps: 50
    prob_flow: false
  like:
    # hutchinson_type: Gaussian
    hutchinson_type: Rademacher
    # hutchinson_type: None
    n_steps: 100
    # rtol: null
    # rtol: 1e-6
    # atol: 1e-6
    rtol: 1e-4
    atol: 1e-4
    # atol: 1e-6
    hutchinson_samples: 8


data:
  # _target_: neural_diffusion_processes.data.get_vec_gp_data
  num_samples_train: 80_000
  num_points: 30
  x_radius: 10
  # x_radius: 20
  kernel: ${data_kernel.cls}
  # variance: 10
  variance: 1.
  # hyperparameters: ${data_kernel.params}
  params:
    kernel:
      lengthscale: ${sqrt:5.}
      # lengthscale: 2.23606797749979
      variance: ${data.variance}
    mean_function: {}
  mean_function:
    _target_: gpjax.Zero
    output_dim: 2
  obs_noise: 0.02
  seed_test: 1
  # num_samples_test:  1_000
  num_samples_test: 10_000
  seed: 0
  # min_context: 5
  # max_context: 50
  min_context: 25
  max_context: ${data.min_context}
  # n_points: 50
  n_points: -1

kernel:
  params:
    variance: 1.
    # variance: ${data.variance}
    lengthscale: 1.
  noise: .1

sde:
  _target_: neural_diffusion_processes.sde.SDE
  _convert_: object
  std_trick: true
  residual_trick: true
  # limiting_kernel_hyperparameters: 
  #   variance: 1.0
  #   lengthscale: 1.0
  limiting_kernel: ${kernel.cls}
    # _target_: neural_diffusion_processes.kernels.RBFVec
    # _target_: neural_diffusion_processes.kernels.WhiteVec
    # output_dim: 2
  limiting_mean_fn:
    _target_: gpjax.Zero
    output_dim: 2
  exact_score: false

net:
  n_layers: 5
  hidden_dim: 128
  num_heads: 4

# eval_batch_size: ${batch_size}
now: ${now:%Y-%m-%d}/${now:%H-%M-%S}

# resume: false
# mode: all
PROJECT_NAME: score-sde
# PROJECT_NAME: neural_diffusion_processes